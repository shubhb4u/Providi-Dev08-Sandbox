{"version":3,"sources":["../../action-bot-landing-page/index.js"],"names":["onDocumentReady","callback","document","readyState","addEventListener","origin","window","location","API_CONFIG","cdnUrl","includes","papiUrl","PREFIX","VALUES_LIFE_TIME","supportedAppTypes","appTypesWithDataMapping","envIdToEnvPath","params","URLSearchParams","search","paramsAreValid","searchParams","requiredParamKeys","every","key","has","hasOwnProperty","get","getDialog","botId","conversationId","dialogId","envId","jwt","url","featchDataFromServer","getNode","nodeId","bbCodes","Promise","resolve","wmjQuery","ajax","type","beforeSend","xhr","setRequestHeader","success","fetchData","normalizeAnswers","rawAnswers","nodeData","settings","app","answers","Object","entries","reduce","acc","descriptor","value","innerAcc","innerKey","innerValue","Number","dataMapping","runDeployable","classWalkMeAPI","_walkmeInternals","ctx","shoutOutsManager","shuttlesManager","siteConfigManager","appTypeToWmActionHandler","START_WALKTHRU","id","startFlowById","START_SMARTWALKTHRU","SMARTWALKTHRU","WALKTHRU","startWalkthruById","SURVEY","startSurveyById","SHOUTOUT","activateById","RESOURCE","startContentById","SHUTTLE","data","jsonSettings","Custom","actionBotCustomSettings","actionbot","rawNode","webSystemGuid","destinationUrl","permalink","saveAnswersToStorage","refreshGetData","customDestinationUrl","href","accountsToSync","undefined","syncSwtDataToOtherAccounts","length","syncSwtDataMatchingRecords","filter","item","Array","isArray","map","indexOf","accountsGuids","accountGuids","concat","e","console","error","forEach","account","warn","clientStorageManager","ttl","swtDataTTL","node","find","saveData","forceLoad","payloadOptions","commonEvents","nodeSettings","wmActionHandler","payload","options","raiseEvent","open","loadUserSnippet","onReadyCallback","walkme_ready","userGuid","envPath","snippetSrc","walkmeScript","createElement","src","body","append","forceProxyStorage","exDate","Date","setTime","getTime","expireString","toUTCString","cookie"],"mappings":"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","file":"index.js","sourcesContent":["// @flow\n/* istanbul ignore file */\nfunction onDocumentReady(callback) {\n  if (document.readyState === 'complete' || document.readyState === 'interactive') {\n    callback();\n  } else {\n    document.addEventListener('DOMContentLoaded', callback);\n  }\n}\n\nonDocumentReady(() => {\n  const { origin } = window.location;\n  const API_CONFIG = {\n    cdnUrl: origin.includes('localhost') ? 'https://cdn.walkmeqa.com' : origin,\n    papiUrl: `https://papi.walkme${\n      origin.includes('localhost') || origin.includes('walkmeqa') ? 'qa' : ''\n    }.com`,\n  };\n  const PREFIX = 'wm-ab-';\n  const VALUES_LIFE_TIME = 60 * 10;\n\n  const supportedAppTypes = [\n    'START_WALKTHRU',\n    'START_SMARTWALKTHRU',\n    'SMARTWALKTHRU',\n    'WALKTHRU',\n    'SURVEY',\n    'SHOUTOUT',\n    'RESOURCE',\n    'SHUTTLE',\n    'WEB_INTEGRATION',\n    'STORE_DATA',\n  ];\n  const appTypesWithDataMapping = supportedAppTypes; // According to EUI they all have dataMapping\n  const envIdToEnvPath = { 0: '', 3: '/test', 95: '/success', 32: '/success' };\n  const params = new URLSearchParams(window.location.search);\n\n  const paramsAreValid = (searchParams) => {\n    const requiredParamKeys = [\n      'userGuid',\n      'jwt',\n      'envId',\n      'botId',\n      'conversationId',\n      'dialogId',\n      'nodeId',\n    ];\n\n    return (\n      requiredParamKeys.every((key) => searchParams.has(key)) &&\n      envIdToEnvPath.hasOwnProperty(searchParams.get('envId'))\n    );\n  };\n\n  const getDialog = async ({ botId, conversationId, dialogId, envId, jwt }) => {\n    const url = `${\n      API_CONFIG.papiUrl\n    }/chatbot/bots/${botId}/conversations/${conversationId}/dialogs/${dialogId}`;\n    return featchDataFromServer(url, envId, jwt);\n  };\n\n  const getNode = ({ botId, conversationId, dialogId, nodeId, envId, jwt, bbCodes }) => {\n    let url = `${\n      API_CONFIG.papiUrl\n    }/chatbot/bots/${botId}/conversations/${conversationId}/dialogs/${dialogId}/nodes/${nodeId}`;\n    if (bbCodes) {\n      url = url + `?bbCodes=${bbCodes}`;\n    }\n    return featchDataFromServer(url, envId, jwt);\n  };\n\n  const featchDataFromServer = async (url, envId, jwt) => {\n    const fetchData = await new Promise((resolve) => {\n      wmjQuery.ajax({\n        url,\n        type: 'GET',\n        beforeSend: function(xhr) {\n          xhr.setRequestHeader('content-type', 'application/json');\n          xhr.setRequestHeader('authorization', `Bearer ${jwt}`);\n          xhr.setRequestHeader('x-wmab-wmenv', envId);\n        },\n        success: resolve,\n      });\n    });\n\n    return fetchData;\n  };\n\n  const normalizeAnswers = (rawAnswers, nodeData) => {\n    const { settings = {} } = nodeData;\n    const { app } = settings;\n\n    const answers = Object.entries(rawAnswers).reduce((acc, [key, descriptor]) => {\n      if (descriptor && descriptor.type === 'conversationVariable') {\n        return typeof descriptor.value === 'object'\n          ? {\n              ...acc,\n              ...Object.entries(descriptor.value).reduce(\n                (innerAcc, [innerKey, innerValue]) => ({\n                  ...innerAcc,\n                  [innerKey]: { value: innerValue, nodeId: Number(key) },\n                }),\n                {}\n              ),\n            }\n          : acc;\n      }\n\n      return { ...acc, [key]: { ...descriptor, nodeId: Number(key) } };\n    }, {});\n\n    if (appTypesWithDataMapping.includes(app)) {\n      const { dataMapping = {} } = nodeData;\n\n      return Object.entries(dataMapping).reduce((acc, [key, value]) => {\n        return { ...acc, [value]: answers[key] };\n      }, {});\n    }\n\n    return {};\n  };\n\n  const runDeployable = async (params) => {\n    const jwt = params.get('jwt');\n    const botId = params.get('botId');\n    const conversationId = params.get('conversationId');\n    const dialogId = params.get('dialogId');\n    const envId = params.get('envId');\n    const nodeId = params.get('nodeId');\n    const bbCodes = params.get('bbCodes');\n\n    const classWalkMeAPI = window._walkmeInternals.ctx.get('ClassWalkMeAPI');\n    const shoutOutsManager = window._walkmeInternals.ctx.get('ShoutOutsManager');\n    const shuttlesManager = window._walkmeInternals.ctx.get('ShuttlesManager');\n    const siteConfigManager = window._walkmeInternals.ctx.get('SiteConfigManager').get();\n\n    const appTypeToWmActionHandler = {\n      START_WALKTHRU: (id) => classWalkMeAPI.startFlowById(id),\n      START_SMARTWALKTHRU: (id) => classWalkMeAPI.startFlowById(id),\n      SMARTWALKTHRU: (id) => classWalkMeAPI.startFlowById(id),\n      WALKTHRU: (id) => classWalkMeAPI.startWalkthruById(id),\n      SURVEY: (id) => classWalkMeAPI.startSurveyById(id),\n      SHOUTOUT: (id) => shoutOutsManager.activateById(id),\n      RESOURCE: (id) => classWalkMeAPI.startContentById(id),\n      SHUTTLE: (id) => shuttlesManager.activateById(id),\n    };\n\n    try {\n      const { data: rawAnswers } = await getDialog({ botId, conversationId, dialogId, envId, jwt });\n      const { Custom: jsonSettings } = siteConfigManager || {};\n      const { actionbot: actionBotCustomSettings } = jsonSettings || {};\n\n      const rawNode = await getNode({\n        botId,\n        conversationId,\n        dialogId,\n        nodeId,\n        envId,\n        jwt,\n        bbCodes,\n      });\n\n      const answers = normalizeAnswers(rawAnswers, rawNode);\n\n      if (\n        rawNode.settings.webSystemGuid &&\n        rawNode.settings.destinationUrl &&\n        rawNode.settings.permalink\n      ) {\n        saveAnswersToStorage(answers, actionBotCustomSettings, rawNode.settings.webSystemGuid);\n        refreshGetData(answers, appTypeToWmActionHandler, rawNode, {\n          botId,\n          conversationId,\n          dialogId,\n        });\n\n        let destinationUrl = rawNode.customDestinationUrl\n          ? rawNode.customDestinationUrl\n          : rawNode.settings.destinationUrl;\n        location.href = `${destinationUrl}${rawNode.settings.permalink}`;\n        return;\n      }\n\n      let accountsToSync = [undefined];\n\n      try {\n        const { syncSwtDataToOtherAccounts } = actionBotCustomSettings || {};\n\n        if (syncSwtDataToOtherAccounts && syncSwtDataToOtherAccounts.length) {\n          const syncSwtDataMatchingRecords = syncSwtDataToOtherAccounts.filter((item) => {\n            if (Array.isArray(item.conversationId)) {\n              return item.conversationId.map(Number).indexOf(Number(conversationId)) > -1;\n            }\n\n            return Number(item.conversationId) === Number(conversationId);\n          });\n\n          if (syncSwtDataMatchingRecords && syncSwtDataMatchingRecords.length) {\n            const accountsGuids = syncSwtDataMatchingRecords.reduce((acc, item) => {\n              if (item && item.accountGuids && item.accountGuids.length) {\n                return acc.concat(item.accountGuids);\n              }\n\n              return acc;\n            }, []);\n\n            accountsToSync = accountsToSync.concat(accountsGuids);\n          }\n        }\n      } catch (e) {\n        console.error(e);\n      }\n\n      accountsToSync.forEach((account) => {\n        saveAnswersToStorage(answers, actionBotCustomSettings, account);\n      });\n\n      refreshGetData(answers, appTypeToWmActionHandler, rawNode, {\n        botId,\n        conversationId,\n        dialogId,\n      });\n    } catch (e) {\n      console.error(e);\n      console.warn(\n        'Unable to launch deployable. Please reload the page or check parameters validity.'\n      );\n    }\n  };\n\n  const saveAnswersToStorage = (answers, actionBotCustomSettings, account) => {\n    const clientStorageManager = window._walkmeInternals.ctx.get('ClientStorageManager');\n    Object.entries(answers).forEach(([key, value]) => {\n      let ttl;\n      try {\n        const swtDataTTL = actionBotCustomSettings && actionBotCustomSettings.swtDataTTL;\n\n        if (swtDataTTL && swtDataTTL.length) {\n          const node = swtDataTTL.find((item) => {\n            if (Array.isArray(item.nodeId)) {\n              return item.nodeId.map(Number).indexOf(value.nodeId) > -1;\n            }\n\n            return Number(item.nodeId) === value.nodeId;\n          });\n\n          ttl = Number(node && node.ttl);\n        }\n      } catch (e) {\n        console.error(e);\n      }\n\n      clientStorageManager.saveData(`${PREFIX}${key}`, value, VALUES_LIFE_TIME, account);\n    });\n\n    clientStorageManager.saveData(\n      `${PREFIX}web-integration`,\n      { forceLoad: 1 },\n      VALUES_LIFE_TIME,\n      account\n    );\n  };\n\n  const refreshGetData = (answers, appTypeToWmActionHandler, rawNode, payloadOptions) => {\n    const clientStorageManager = window._walkmeInternals.ctx.get('ClientStorageManager');\n    const commonEvents = window._walkmeInternals.ctx.get('CommonEvents');\n\n    clientStorageManager.refreshGetData(null, async () => {\n      const nodeSettings = rawNode.settings || {};\n      const wmActionHandler = appTypeToWmActionHandler[nodeSettings.app];\n\n      if (wmActionHandler && nodeSettings.id) {\n        const payload = {\n          settings: nodeSettings,\n          answers,\n          options: payloadOptions,\n        };\n\n        commonEvents.raiseEvent('WM_BOT_DUI_ACTION', payload);\n\n        window.open = (url) => {\n          location.href = url;\n        };\n        await wmActionHandler(nodeSettings.id);\n      }\n    });\n  };\n\n  const loadUserSnippet = (params, onReadyCallback) => {\n    window.walkme_ready = onReadyCallback;\n\n    const userGuid = params.get('userGuid');\n    const envPath = envIdToEnvPath[params.get('envId')];\n    const snippetSrc = `${\n      API_CONFIG.cdnUrl\n    }/users/${userGuid}${envPath}/walkme_${userGuid}_https.js`;\n    const walkmeScript = document.createElement('script');\n\n    walkmeScript.type = 'text/javascript';\n    walkmeScript.src = snippetSrc;\n\n    document.body.append(walkmeScript);\n  };\n\n  const forceProxyStorage = () => {\n    const exDate = new Date();\n    exDate.setTime(exDate.getTime() + 100000);\n\n    const expireString = '; expires=' + exDate.toUTCString() + '; path=/';\n    document.cookie = 'wm-stt=proxy' + expireString;\n  };\n\n  if (paramsAreValid(params)) {\n    forceProxyStorage();\n    loadUserSnippet(params, () => runDeployable(params));\n  } else {\n    console.warn('Required parameter is missing or malformed.');\n  }\n});\n"]}